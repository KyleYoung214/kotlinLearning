For Char
\t
\b
\n
\r
\'
\"
\\
\$


a==b -> a?.equals(b)?:(b==null)
a===b 比较对象

default class is final public

import xx.xxx.xxxx as yyyy

修饰符           类成员            顶层声明
public        所有地方可见        所有地方可见
internal      模块中可见         模块中可见
protected     子类中可见         ————
private       类中可见           文件中可见

internal 在字节码中会变成public


匿名对象可以实现多个接口，不是单例，与对象的声明不同

序列操作分为2类，中间和末端操作，中间操作始终都是惰性的。末端操作触发执行所有延期计算。

lambda内部没有this。L阿米巴大众this引用指向是包围它的类。
匿名对象里，this指向该对象实例。


java         kotlin
int[]        IntArray
short[]      ShortArray
long[]       LongArray
float[]      FloatArray
double[]     DoubleArray
char[]       CharArray

val runtimeConst = 3
const val compileConst = 2

lambda  { [parameters] -> [function body, last line is the return value] }
lambda 用()调用，相当于invoke


shl —— 带符号左移
shr —— 带符号右移
ushr —— 无符号右移
and —— 按位与
or —— 按位或
xor —— 按位异或
inv —— 按位取反

args.forEach ForEach@{
    if(condition)return@ForEach
    ...
}

Outter@for(...){
    Inner@while(condition){
        if(condition2)break@Outter
    }
}

array -> vararg
val array = intArrayOf(1,2,3)
*array

接口方法冲突
super<[父类(接口)名]>.[方法名]([参数列表])

方法重载@JvmOverloads

data class   componentN
allOpen noArg plugins

匿名内部类可继承父类、实现多个接口, object: A, {...}

高阶函数：传入或者返回函数的函数
函数引用::println
带有Receiver的引用 xxx::method

尾递归优化 调用自身后无其他操作 关键字tailrec